/*
指针的定义

（一）背景知识
   1.内存用于存储数据，最小单元是字节（8bit/8位），每个单元都有一个编号，即地址
     （即地址：0x00000000~0xFFFFFFFF）
   2.变量有大小（sizeof操作符，int大小是4），变量的大小指的是她在内存中占了几个字节
   3.变量有地址，变量地址就是该变量在内存中的位置，用&符号可以取得（操作系统给你分配地址）
   4.变量可以赋值，就是向内存写入数据（可以看到内存值），读取变量的值就是从内存读取数据
   5.每个变量都有自己的内存地址，绝不会有2个变量的内存地址相同（一个萝卜一个坑）
     关掉程序再打开但是分配了另一个毫不相关的地址，位置变了内容不变
   6.程序每次运行时，变量的地址都不一样，无法预测也不需要预测其地址

（二）查看变量地址
   1.地址是一个16进制的数：
     int a = 0;
	 double b =0;
	 printf("%08X \n",&a);
	 printf("%08X \n",&b);//16进制打印地址
   2.也可以使用%p打印地址：;
     printf("%p \n",&a);//p:poiter打印地址

(三)如何表示地址
  1.地址类型
	地址是整数，是否可以用int？（理论上可以）
	但是为了强调她是一个内存地址，提出一些新的类型
	char*：表示一个char型变量的地址
	short*：表示一个short型变量的地址
	int*：表示一个int型变量的地址
	float*：表示一个float型变量的地址
	double*：表示一个double型变量的地址
	unsigned char*：表示一个unsig char*型变量的地址
	XXX*：表示一个XXX型变量的地址  
  2.地址表示
    2.1定义：
       我们称int*为指针类型，pa为指针类型的变量（简称指针）
    2.2两种说法：
       1.pa指向了一个int型变量
       2.pa所在的内存是一个int型整数
    2.3例子：
       int a = 10;
       int* pa = &a;
       定义一个变量pa类型为int*,初始值为&a
（四）关于指针
    1）指针也是变量，是可以变得（可以把它视为一种整型变量）
	   int* p = &a;//p:指向a
	   p = &b;//p指向b
	2）支持赋值操作符，其他操作符另说
	   #include<stdio.h>
	   int main()
	   {
	      int a = 10;
	      int b = 11;
	      int* p = &a;
	      p = &b;//走到此步p值为a
	      return 0;//走到此步p值为b
	   }
	3）不同类型的指针，不能相互赋值
	   int main()
	   {
	      char a = 78;//一个指向int 一个指向double
	      float* p = &a;//错！左侧为float*，右侧为char*
	      return 0;
	   }
	4）指针即地址，地址是整数，所以指针是整数
	5）星号*的位置比较自由，没有区别，常用的有
	   int* a;//int 与 *连写（推荐）
	   int * a;//int 与*中间有空白
	   int *a;//*与变量名连着
	   （作者的习惯作为第一写法）
（五）星号操作
  1. 定义：按地址访问
  2.改变变量方式：
     2.1直接使用变量名赋值
		int a = 0;
		a = 0x11;
		a = 0x12;
		a = 0x1314;
		{
		   int a = 0;
		   a = 0x11;//此时为0
		   a = 0x12;//此时为11
		   a = 0x1314;//此时为12
		   return 0;//此时为1314
		}
	 2.2使用指针（按地址访问，直接修改内存）
		int a = 0;
		int* p = &a;//
		*p = 0x11;//*p代表数据本身的内容
		*p = 0x1314;//*p引用内存内容
  3.*p:指针变量p,*p用于访问p指向的变量（p指向的内存）
       或者称作：*p用于访问P指向的内存（读、写）
	   int a = 0x1314;
	   int* p = &a;//p指向a所在的内存
	   *p += 2;
	   int b = *p;//取得P指向内存的值
	   int c = *p + 2;
	   return 0;
  4.星号操作：（&号与*号相当于互为逆运算）
     4.1区分：指针定义语句中的*和按地址访问的*
		int a = 10;
		int b = 11;
		int* p;//定义一个指针，注意int*作为一个整体
		p = &a;//p指向a
		printf("%d \n",*p);//*p:取得p处内存的值
		p = &b;
		printf("%d \n",*p);
	 4.2int不支持星号操作（只有指针才支持星号操作）
	    虽然指针是一种整数类型，但是它是特殊的，*号只能用于指针类型
		int addr = 0x12345678;//addr:普通int型变量
		*addr = 0;//编译错误！只有指针才能支持星号操作
	 4.3其他指针类型：也是一样
	    char a = 78;
		char* p = &a;
		*p = 79;
		double m = 1.1;
		double* pm = &m;
		*pm = 1.2;
(六)小结
  1.新的类型：char*、short*、int*
  2.按地址访问：星号操作
  3.*p = &a,p指向a,p指向a的内存
*/





































